apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice-deploy
spec:
  replicas: 3 # Adjust the number of replicas as needed
  selector:
    matchLabels:
      app: microservice
  template:
    metadata:
      labels:
        app: microservice
    spec:
      containers:
        - name: microservice
          image: famaten/my-test-task # docker image from my personal docker hub registry
          ports:
            - containerPort: 3000
          resources:
            requests:
              memory: "16Mi" # Request 64 megabytes of memory
              cpu: "32m" # Request 32 milliCPU units to ensure horizontal autoscalling will work
            limits:
              memory: "32Mi"
              cpu: "64m"
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3

---
apiVersion: v1
kind: Service
metadata:
  name: microservice-svc
spec:
  selector:
    app: microservice
  ports:
    - protocol: TCP
      port: 3000 # Exposed port on the service
      targetPort: 3000
  type: LoadBalancer

## kubernetes metrics server should be installed
# https://github.com/kubernetes-sigs/metrics-server#readme
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: microservice
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: microservice-deploy
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 75
